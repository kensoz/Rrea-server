"use strict";var e=require("koa"),a=require("koa-body"),t=require("koa-logger"),r=require("koa-router"),o=require("mongoose"),s=require("dayjs"),n=require("jsonwebtoken"),i=require("log4js"),d=require("crypto-js"),c=require("apollo-server-koa"),p=require("apollo-server-errors"),l=require("koa-jwt");function u(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var m=u(e),g=u(a),y=u(t),f=u(r),h=u(s),w=u(n),b=u(i),S=u(d),v=u(l);const q=Math.floor(Date.now()/1e3)+216e3,C={host:"development"===process.env.NODE_ENV?7001:7002,apiPrefix:"/api/v1",dataBase:"development"===process.env.NODE_ENV?"areadb":"rrea",dataBaseUrl:"development"===process.env.NODE_ENV?"mongodb://127.0.0.1:27017/":"mongodb://admin:admin@database:27017/",secret:"maeda",jwtLimitTime:q,passwordKey:"1234123412ABCDEF",passwordIV:"ABCDEF1234123412"},j=new o.Schema({value:{type:String,required:!0},text:{type:String,required:!0}},{versionKey:!1}),M=o.model("areas",j),x=new o.Schema({value:{type:String,required:!0},text:{type:String,required:!0}},{versionKey:!1}),k=o.model("names",x),_=new o.Schema({value:{type:String,required:!0},text:{type:String,required:!0}},{versionKey:!1}),D=o.model("jobs",_),N=new o.Schema({value:{type:String,required:!0},text:{type:String,required:!0}},{versionKey:!1}),O=o.model("races",N),$=new f.default;$.get("/",(async e=>{try{const a=await M.find({},{_id:0}),t=await k.find({},{_id:0}),r=await O.find({},{_id:0}),o={area:a,name:t,race:r,job:await D.find({},{_id:0})};e.body={code:10011,message:"取得成功",result:o},e.app.emit("log","formController読み取り")}catch{e.app.emit("error",10012,e)}}));const E=new o.Schema({id:{type:String,required:!0},name:{type:String,required:!0},nameSpell:{type:String,required:!0},nameCode:{type:String,required:!0},job:{type:String,required:!0},jobCode:{type:String,required:!0},race:{type:String,required:!0},raceCode:{type:String,required:!0},skill:{type:String,required:!0},photo:{type:String,required:!0}},{versionKey:!1}),Y=o.model("users",E),W=(e,a,t)=>{let r=[];for(let e=0;e<5;e++)r.push({count:0});e.map((e=>{const t=a[Math.floor(Math.random()*a.length)];Object.assign(e,{area:t.text,areaCode:t.value,YYYYMMDD:h.default().format("YYYY-MM-DD"),HHMMss:h.default().format("HH:mm:ss")}),r[Number(t.value)-1].count++}));const o=""===t?e:e.filter((e=>e.areaCode===t));return o.sort(((e,a)=>Number(e.areaCode)-Number(a.areaCode))),a.map(((e,a)=>{Object.assign(r[a],{area:e.text},{value:Number(e.value)})})),r.unshift({count:e.length,area:"全員",value:0}),{count:r,user:o}},J=new f.default;J.post("/",(async e=>{if(void 0!==e.request.body)try{const a=e.request.body,t=await M.find({},{_id:0}),r=await Y.find({raceCode:0===a.raceCode.length?{$type:"string"}:{$in:a.raceCode},nameCode:0===a.nameCode.length?{$type:"string"}:{$in:a.nameCode},jobCode:0===a.jobCode.length?{$type:"string"}:{$in:a.jobCode}},{_id:0}),o=JSON.parse(JSON.stringify(r)),s=W(o,t,a.areaCode);e.body={code:10011,message:"data取得成功",result:s},e.app.emit("log","data読み取り")}catch{e.app.emit("error",10012,e)}else e.app.emit("error",10019,e)}));var F=async(e,a={},t)=>{t.app.emit("log","読み取り"),await e.find(a,{_id:0}).then((e=>{t.body={code:10011,message:"取得成功",result:e}})).catch((()=>{t.app.emit("error",10012,t)}))},H=async(e,a)=>{a.app.emit("log","追加");const t=new e(a.request.body);await t.save().then((()=>{a.body={code:10013,message:"追加成功",result:""}})).catch((()=>{a.app.emit("error",10014,a)}))},B=async(e,a)=>{a.app.emit("log","更新"),await e.updateOne(a.params,{text:a.request.body?.text}).then((e=>{0===e.matchedCount?a.app.emit("error",10022,a):a.body={code:10015,message:"更新成功",result:""}})).catch((()=>{a.app.emit("error",10016,a)}))},K=async(e,a)=>{a.app.emit("log","削除"),await e.deleteOne(a.params).then((e=>{0===e.deletedCount?a.app.emit("error",10022,a):a.body={code:10017,message:"削除成功",result:""}})).catch((()=>{a.app.emit("error",10018,a)}))};var L=async e=>{await F(D,{},e)},T=async e=>{await H(D,e)},V=async e=>{await B(D,e)},U=async e=>{await K(D,e)};b.default.configure({appenders:{info:{type:"dateFile",filename:"logs/info.log",pattern:"yyyy-MM-dd.log",encoding:"utf-8",maxLogSize:1e4},error:{type:"dateFile",filename:"logs/error.log",pattern:"yyyy-MM-dd.log",encoding:"utf-8",maxLogSize:1e4}},categories:{default:{appenders:["info"],level:"info"},info:{appenders:["info"],level:"info"},error:{appenders:["error"],level:"error"}}});const I=e=>{b.default.getLogger("error").error(e)},A=e=>{b.default.getLogger("info").info(e)};var P=(e,a)=>{const t=e.header.authorization?.split(" ")[1];try{if(2!==w.default.verify(t,C.secret).permission)return a();I("10010 : JWT権限足りません"),e.status=400,e.body={code:10010,message:"JWT権限足りません",result:""}}catch{e.app.emit("error",10004,e)}};const z=new f.default;z.get("/",L),z.post("/",P,T),z.put("/:value",P,V),z.delete("/:value",P,U);var Q=async e=>{await F(O,{},e)},R=async e=>{await H(O,e)},G=async e=>{await B(O,e)},X=async e=>{await K(O,e)};const Z=new f.default;Z.get("/",Q),Z.post("/",P,R),Z.put("/:value",P,G),Z.delete("/:value",P,X);var ee=async e=>{await Y.find({},{_id:0}).then((a=>{e.body={code:10011,message:"取得成功",result:a}})).catch((()=>{e.app.emit("error",10012,e)}))},ae=async e=>{const a=new Y(e.request.body);await a.save().then((()=>{e.body={code:10013,message:"追加成功",result:""}})).catch((()=>{e.app.emit("error",10014,e)}))},te=async e=>{console.log(e.params.id),await Y.updateOne({id:e.params.id},e.request.body).then((a=>{0===a.matchedCount?e.app.emit("error",10022,e):e.body={code:10015,message:"更新成功",result:""}})).catch((()=>{e.app.emit("error",10016,e)}))},re=async e=>{e.app.emit("log","削除"),await Y.deleteOne({id:e.params.id}).then((a=>{0===a.deletedCount?e.app.emit("error",10022,e):e.body={code:10017,message:"削除成功",result:""}})).catch((()=>{e.app.emit("error",10018,e)}))};const oe=new f.default;oe.get("/",ee),oe.post("/",P,ae),oe.put("/:id",P,te),oe.delete("/:id",P,re);const se=new f.default;se.get("/",(async e=>{await F(M,{},e)}));const ne=new f.default;ne.get("/",(async e=>{await F(k,{},e)}));const ie=new o.Schema({id:{type:String,required:!0},passWord:{type:String,required:!0},permission:{type:Number,required:!0},time:{type:String,required:!0},token:{type:String,required:!0}},{versionKey:!1}),de=o.model("auths",ie),ce=e=>{const a=S.default.enc.Utf8.parse(C.passwordKey),t=S.default.enc.Utf8.parse(C.passwordIV),r=S.default.enc.Hex.parse(e),o=S.default.enc.Base64.stringify(r);return S.default.AES.decrypt(o,a,{iv:t,mode:S.default.mode.CBC,padding:S.default.pad.Pkcs7}).toString(S.default.enc.Utf8).toString()};var pe=async e=>{const a=await ce(e.request.body.passWord);await de.find({id:e.request.body?.id},{_id:0}).then((t=>{if(0!==t.length)if(a===t[0].passWord){const a=w.default.sign({id:t[0].id,permission:t[0].permission,exp:C.jwtLimitTime},C.secret);e.body={code:10001,message:"ログイン成功しました",result:{id:t[0].id,passWord:"*****",permission:t[0].permission,time:t[0].time,token:a}},e.app.emit("log",`ログイン--${e.request.body?.passWord}`),de.updateOne({id:t[0].id},{time:h.default().format("YYYY-MM-DD HH:mm:ss"),token:a}).then()}else e.body={code:10003,message:"パスワードが間違いました",result:""};else e.body={code:10002,message:"idは存在しないです",result:""}})).catch((()=>{e.app.emit("error",10004,e)}))},le=async e=>{await de.updateOne({id:e.params.id},{token:""}).then((()=>{console.log(`${e.params.id} is Logout`),e.app.emit("log",`ログアウト--${e.params.id}`),e.body={code:10008,message:"ログアウト成功しました",result:""}})).catch((()=>{e.app.emit("error",10004,e)}))},ue=async e=>{e.app.emit("log","管理者情報取得"),await de.find({},{_id:0,passWord:0}).then((a=>{e.body={code:1e4,message:"管理者情報取得成功",result:a}})).catch((()=>{e.app.emit("error",10006,e)}))},me=async e=>{const a=await ce(e.request.body.passWord);e.app.emit("log","管理者のパスワード修正"),await de.updateOne({id:e.params.id},{passWord:a}).then((()=>{e.body={code:1e4,message:"管理者のパスワード修正成功",result:""}})).catch((()=>{e.app.emit("error",10007,e)}))};const ge=new f.default;ge.post("/",pe),ge.delete("/:id",le),ge.get("/",ue),ge.patch("/:id",me);const ye=new f.default;ye.prefix(C.apiPrefix),ye.use("/form",$.routes(),$.allowedMethods()),ye.use("/data",J.routes(),J.allowedMethods()),ye.use("/job",z.routes(),z.allowedMethods()),ye.use("/race",Z.routes(),Z.allowedMethods()),ye.use("/user",oe.routes(),oe.allowedMethods()),ye.use("/area",se.routes(),se.allowedMethods()),ye.use("/name",ne.routes(),ne.allowedMethods()),ye.use("/auth",ge.routes(),ge.allowedMethods());class fe extends p.ApolloError{constructor(e,a){super(e,a),Object.defineProperty(this,"name",{value:"errorGraphQL"})}}new fe("graphqlform読み取り失敗","10012");const he=async(e,a)=>{try{a.app.emit("log","graphqlform読み取り");const t=await M.find({},{_id:0}),r=await k.find({},{_id:0}),o=await O.find({},{_id:0}),s=await D.find({},{_id:0});return{area:t,name:r,race:o,job:s}[e]}catch{throw new fe("graphqlform読み取り失敗","10021")}},we=c.gql`
  "form"
  type Form {
    value: String
    text: String
  }

  "count"
  type Count {
    count: Int
    area: String
    value: Int
  }

  "user"
  type User {
    id: String
    name: String
    nameSpell: String
    nameCode: String
    job: String
    jobCode: String
    race: String
    raceCode: String
    skill: String
    photo: String
    area: String
    areaCode: String
    YYYYMMDD: String
    HHMMss: String
  }

  "data"
  type Data {
    count: [Count]
    user: [User]
  }

  "query"
  type Query {
    code: Int
    message: String
    area: [Form]
    name: [Form]
    race: [Form]
    job: [Form]
    data(areaCode: String, jobCode: [String], nameCode: [String], raceCode: [String]): Data
  }
`,be={Query:{code:()=>10011,message:()=>"graphql取得成功",area:async(e,a,t)=>await he("area",t.ctx),name:async(e,a,t)=>await he("name",t.ctx),race:async(e,a,t)=>await he("race",t.ctx),job:async(e,a,t)=>await he("job",t.ctx),data:async(e,a,t)=>await(async(e,a)=>{try{a.app.emit("log","graphqldata読み取り");const t=await M.find({},{_id:0}),r=await Y.find({raceCode:0===e.raceCode.length?{$type:"string"}:{$in:e.raceCode},nameCode:0===e.nameCode.length?{$type:"string"}:{$in:e.nameCode},jobCode:0===e.jobCode.length?{$type:"string"}:{$in:e.jobCode}},{_id:0}),o=JSON.parse(JSON.stringify(r));return W(o,t,e.areaCode)}catch{throw new fe("graphqldata読み取り失敗","10021")}})(a,t.ctx)}},Se=new c.ApolloServer({typeDefs:we,resolvers:be,context:({ctx:e})=>({ctx:e}),introspection:"development"===process.env.NODE_ENV});let ve=500,qe={code:9999,message:"プログラムエラー",result:""};const Ce=new m.default;(async()=>{await o.connect(C.dataBaseUrl+C.dataBase).then((()=>{console.log("mongodb connect success")})).catch((()=>{console.log("mongodb connect failed")}))})(),Ce.use(((e,a)=>a().catch((a=>{401===a.status?(e.status=401,e.body={code:10009,message:"JWT認証失敗",result:""},I("10009 : JWT認証失敗")):I("9999 : プログラムエラー")})))),Ce.use(v.default({secret:C.secret}).unless({path:[/\/graphql/,/\/auth/,/\/data/,/\/form/]})),Ce.use(y.default()),Ce.use(g.default()),Ce.use(ye.routes()).use(ye.allowedMethods()),Ce.on("error",(async(e,a)=>{switch(qe.code=e,e){case 10022:ve=400,qe.message="無効なID";break;case 10020:ve=404,qe.message="データは見つかりません";break;case 10019:ve=402,qe.message="無効なパラメータ";break;case 10003:ve=200,qe.message="ログイン失敗しました";break;case 10006:ve=404,qe.message="管理者情報取得失敗しました";break;case 10007:ve=403,qe.message="パスワード修正失敗しました";break;case 10009:ve=403,qe.message="JWT認証失敗";break;case 10010:ve=400,qe.message="JWT権限足りません";break;case 10014:ve=403,qe.message="追加失敗";break;case 10012:ve=403,qe.message="取得失敗";break;case 10016:ve=403,qe.message="更新失敗";break;case 10018:ve=403,qe.message="削除失敗"}a.status=ve,a.body=qe;const t=`${qe.code} : ${qe.message}`;I(t),console.log(t)})),Ce.on("log",A),(async e=>{await Se.start(),Se.applyMiddleware({app:e})})(Ce);var je=Ce.listen(C.host,(async()=>{console.log(`server running on port ${C.host} 🚀`),console.log("development"===process.env.NODE_ENV?"Rrea-server dev 💪":"Rrea-serverへようこそ！🤣"),"development"===process.env.NODE_ENV||A("production server start!")}));module.exports=je;
//# sourceMappingURL=app.min.js.map
